<?xml version="1.0" encoding="utf-8"?>
<mdscript name="hds_sphericalize_god_stations">
    <cues>
        <!-- Listen for both GOD station + factory spawns, but only at game start -->
        <cue name="GodSpawn_Listener_Debug" instantiate="true">
            <conditions>
                <check_any>
                    <event_god_created_factory space="player.galaxy" />
                    <check_all>
                        <event_god_created_station space="player.galaxy" />
                        <check_value value="@event.param.ispiratebase" /> <!-- All non-zone-anchored, non-static stations in GOD are pirate bases. -->
                    </check_all>
                </check_any>
                <check_value value="@event.param.godentry != 'pir_spaceweed'" /> <!-- the only static factory -->
                <check_value value="event.param.isgamestartgodentry" />
                <check_value value="@event.param.state == componentstate.operational" /> <!-- Only modify initial pre-built placements -->
                <check_value value="@event.param.position != position.[0.0,0.0,0.0]" /> <!-- 0,0,0 positions seem to be placeholder? -->
            </conditions>

            <actions>
                <set_value name="$Station" exact="event.param" />
                <set_value name="$StationPos" exact="event.param.position" />
                <set_value name="$Sector" exact="event.param.sector" />
                <set_value name="$SecCenter" exact="$Sector.coreposition"/>
                <set_value name="$SecRadius" exact="$Sector.coresize / 2.0f"/>
                <set_value name="$FlatOffset" exact="position.[$StationPos.x - $SecCenter.x, 0.0, $StationPos.z - $SecCenter.z]" />
                <set_value name="$SphereHeightSq" exact="((1.3f* $SecRadius) ^ 2) - ($FlatOffset.x ^ 2) - ($FlatOffset.z ^ 2)" /> <!-- GOD default is 1.3x radius -->
                <set_value name="$SphereHeight" exact="[sqrt([$SphereHeightSq, 0.0f].max), 10000.0f].max" /> <!-- Avoid neg sqrt from stations outside default core radius, min 10km-->

                <!-- radius fraction s in [0,1], mixed uniform/averaged bias -->
                <do_if value="true" chance="50">
                    <set_value name="$sum" exact="[0.0,1.0].randominrange" />
                </do_if>
                <do_else>
                    <set_value name="$sum" exact="0.0" />
                    <do_all exact="5" counter="$idx">
                        <set_value name="$sum" operation="add" exact="[0.0,0.2].randominrange" />
                    </do_all>
                </do_else>
                <set_value name="$sum" exact="$sum * 0.4615f" /> <!-- 130% expanded -> ~60% squashed -->
                <set_value name="$sum" exact="$sum * -1.0f" chance="50" /> <!-- 50% negative -->

                <set_value name="$StationDest" exact="position.[$StationPos.x, $SecCenter.y + ($sum * $SphereHeight), $StationPos.z]" />
                <warp object="$Station" sector="$Sector">
                    <safepos value="$StationDest" allowyaxis="true" includeplotbox="true" ignored="$Station" />
                </warp>
                <debug_text text="'[HDS] Warped ' + $Station.debugname + ' from ' + $StationPos + ' to ' + $StationDest + ' in ' + $Sector.debugname + ' (' + $StationDest.y + ':' + $SecRadius + ')'" />
            </actions>
        </cue>
    </cues>
</mdscript>